当我打算写一个函数实现某种功能又不想让别人看到我的实现时，就将函数的声明放在头文件中，实现放在源文件中，使用者只要，将头文件包含即可，在使用者编译时，头文件提供了类型检查，当然因为包含了头文件名所以不难理解，但是在链接时，连接器显然是找到了头文件所对应的源文件并取出了相应的代码添加到了程序中，所以我产生了一个猜想，是不是头文件对应的实现文件必须与头文件同名时连接器才可以找到对应的源文件，所以我进行了试验，实验结果表明我即便对源文件起一个毫不相干的名字，连接器依然可以找到该源文件，当然前提是：它们同属一个工程的文件夹中，所以给我的启发是源文件，头文件，以及使用者之间的关系是单向的，源文件不需要知道是什么样的头文件给它进行了声明，而头文件也不需理会是什么样的使用者将会使用它。此外我发现在vc6.0下，自定义的头文件用尖括号根本不能被找到，需改成引号。


另外，我还隐约感觉到了面向接口的编程方法，我下面做一个简述，现有源文件1，2，  头文件1，2， 源文件1是头文件1的实现，源文件2是头文件2的实现，假设源文件2的实现是以源文件1中实现为基础的，这样的话，就在源文件2中包含头文件1，但我们使用的是源文件2的功能，所以使用时只要将头文件2包含就行了，也就是说文件1对于外部是完全隐藏的，下面添加一个实例已说明为何我觉得和接口编程方式有关，实现一个栈，以面向对象的方法了考虑的话，栈是一个对象，然后栈有一系列操作方法。但是以接口思维的话，应该这样想问题：我要实现一些栈的方法，栈的数据结构只是基石，是实现方法的基石，所以将数据结构作为上述的文件1，栈方法作为上述的文件2，于使用者而言他看到的东西只是一堆提供栈操作的方法。