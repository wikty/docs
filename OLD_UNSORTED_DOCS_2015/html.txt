<br/>换行
<p></p>新的段落
<hr/>画水平线并换行
<h1-6></h1-6>用于控制内容的层次结构，至于内容样式交给css
http://validator.w3.org可以验证网页的有效性，但firbug也可以
http://jigsaw.w3.org/css-validator验证css文档
xhtml是html遵循xml规则的版本，html5是html4的修订版本
html乱码了，原因编写的html没有保存为纯文本，扩展名不对
css层级样式，层级的意思是通用样式被更具体的样式所覆盖
css分为两类：布局设置，显示设置
布局设置：
display:none|inline|block|list-item;基于相对位置概念
none不显示  inline添加到当前段落 block新段落显示 list-item新段落显示且添加列号，元素stylle.visibility="hidden"同样可以隐藏内容，使用onne时将元素占用的页面布局空间移除，而hidden则不会移除空间
width
height
涉及尺寸的属性支持的单位有：pt px in mm cm
显示设置：
border-width
border-style:solid|double|dashed|dotted|groove|ridge|inset|outset|none
default=>border-style:none; 例外<a><img></a>作为链接图片时为solid,若不需要得自己显示关掉
border-color
border-top
border-bottom
border-left
border-right
border综合设置
color
background-color
text-align:center|left|right|justify
text-indent缩进
font-family
font-size
font-weight
font-style:italic|normal|oblique
font综合设置
line-height
padding
padding-top
padding-left
padding-right
padding-bottom边距填充

span的引入使得在行内可以修改显示属性
优先级link<  <style>  <style:
xhtml规定标签，属性要小写，且属性值用引号
<p>default=>text-algin:left;
order list  数字
<ol><li></li><li></li></ol>
unorder list  圆点等符号
<ul><li></li><li></li></ul>
defined list  dt内容且换行
<dl><dt></dt><dd></dd><dt></dt><dd></dd></dl>
同样列表的使用不要拿来安排内容的显示，而是用来规划文档的结构
<ul style="list-style-type:disc|circle|square|none">
<li style="list-style-type:disc|circle|square">
<ol style="list-style-type:upper-roman|upper-alpha|lower-alpha|decimal|none">
<i>italic<b>bold<font>渐渐被淘汰了，因为css可以实现这些功能，实例：
<div style="font-style:italic;font-weight:bold;"/>
对应<i><b>的<em><strong>并没有明确指出如何突出显示文本，所以更好用
<small>小字体
<big>大字体
<sup>上标
<sub>下标
<tt>等宽字体，html5移除
<pre>等宽字体，保留空格和换行，你写的代码是怎样就是怎样显示的
<u>带下划线的文本，已遭禁用
<strike>带贯穿线的文本
取代font标签：<p style="font-family:arial,'times roman';font-size:12pt">arial大小写不敏感
&copy; &reg; &trade;这些实体引用你会很长用的，当然这些东西有很多。

<img src="" lowsrc="" name="" height= width= vspace= hspace=  border= alt />
lowsrc低分辨率候补图片
alt鼠标移到时显示的图片信息
vspace hspace图片同周边的填充距离
javascript中的图片对象多一个属性complete(bool)检测图片是否加载完成
嵌套在table外的元素样式属性对table无影响
<table style="width:100%">100%表示与浏览器窗口同宽，像素大小不灵活
<tr><td style="width:20%"></td></tr>
<tr><td style="width:80%"></td></tr></table>
单元格的大小若不指定则会随着内容多少而变动，指定其中的一行则每行都一致
单元格中内容默认，水平向左对齐，垂直居中
tr:td  th所以对tr应用样式就可以作用到td和th上，当然，若指定给td的是已经在tr中指定的属性，则使用td的
表格内容对齐：
vertical-algin:top|middle|bottom
text-align:
多行多列：
th  colspan="2"对应两列
tr rowspan="2"对应两行
因为表格的样式有自身来决定，而非body决定，所以他可以自己定义背景色，和图片
background-color   background-image

<a  name=  href=  target=>
target指定在什么窗口打开链接的文档
锚点用于在长文档中跳转小节，锚无效则跳到文档首部
<a name='here'><a href="#here">
这样也可以<a href="document.html#here">将文档直接打开到锚点
href="mailto://“可以发送邮件，前提是安装了邮件客户端软件


table
border不定义不显示
表格中空单元格，不同浏览器是否显示其边框不一致，最好给空单元格添加
&nbsp;
表格被分成几部分：
<thead><tbody><tfoot>,这是标准，但是浏览器支持不是很好
th中的内容浏览器自动加粗
表格标题<caption>
th的跨行跨列：colspan  rowspan
table cellpadding  cellspacing  单元格内容与边框  单元格间
table bgcolor  background
td bgcolor background
align=center | left | right | bottom | top
frame=box | hsides | vsides | above | below 
限定表格边框的呈现部分
<col>为列定义属性值，免去逐一定义列属性的麻烦
<colgroup>比<col>强大一点，通过属性span可以为多个列指定样式

列表：
<dir><menu>已经被废弃了，用<ul>取代它们的功能
<ul><li></li></ul> type=disc | square | circle
<ol><li></li></ol> type=a | A | I | i 默认是数字
<dl><dt></dt><dd></dd></dl>


把内容围起来
<filedset><legend></legend></filedset>
filedset 表示围的边框
legend表示边框的标题
<label>常与input结合使用，为input添加注记，同时label for="forit"
中的forit用来跟id为forit的控件绑定，绑定的意思就是单击<label>时就相当于单击了forit 控件
<optgroup>用于给option进行分组，必须的属性是label用来描述分组信息，label会显示在下拉列表中，分组有助于用户快速找出想要选择的内容，尤其是项目很多时

img alt 浏览器显示图像失败后的替换文本，添加他是用户友好的好习惯
图像与文本混杂在一起时，属性align=bottom | top | middle提供了图像与文本的垂直方向上的对齐方式，align=left | right提供了图像在水平方向的对齐方式，也称图像的浮动，
width height可以改变图像的大小
将图片分隔成几个可交互域：
客户端方案：
<img usemap="#mymap>usemap之url，因为这里在本文档中的map所以这样也可以
<map id='mymap'><area shape coords href /> <area shape coords  href /> 
</map>
服务器端方案：
<img ismap="url">客户端将用户单击区域的坐标传回服务器端，供服务器处理。
longdesc是alt的加强版，但是浏览器支持的不是很好，可是我如何获取longdesc是个问题

web上的图像支持：
jpg和gif这两个格式最为流行，浏览器支持的最好，你要使用别的格式并不能保证浏览器一定可以独立显示。
gif：
无损压缩
支持256色动态替换
不适合图像要求十分逼真的场合
特殊工具处理后的gif可以有：
隔行显示图像：这样的话，加载图像时就可以得到图像的大概轮廓了
透明效果：这样的话可以使得图像看起来具有特别的形状，但是要注意的是，透明的实现只是使用了特殊的颜色，对于文档中的其他内容来讲，图像还是那么大，所以在排版时，透明图像与周边内容结合不是很好
动画：经过处理的几张gif图像可以和在一个文档中，通过处理后轮番显示以实现动画效果，但是要注意的是，慎用gif动画，因为很大，耗带宽
jpg：
支持色彩殊相当多
压缩比极高，但是微损，一般不易察觉，但是线状图回有明显感觉，这是gif是不错的选择
要有明晰的观念，图像是用来导航，或者对文本生动的说明，而非装饰性的东西，当你只是发布一个参考手册等类似的文献时，显然你是不需要图像的，所以最好能用文本说清楚就不用图像，在图像不能加载时，每个浏览器都会给其赋上一个特殊的图片予以说明，而这个东西会打乱文档的文本，所以若明显不要图像就不要使用，文本更容易被搜索引擎抓取，加快图像加载速度的方法，
图像制作时不要使用抖动（难压缩）不要使用不必要的色彩，重复利用缓存中图像，将有个大文档分割成几个小的文档，将比较难于加载的图像包装到超链接中，最好指定图像的尺寸。

文档背景：
bgcolor
background:注意图片是否跟文档合拍。若小则自动重复
text
以上三个老家伙已经被废弃,应该在css中指定

字体：
<tt>等宽字体<small>小号字体<big>大号字体<i><b>
以上控制字体样式的属性建议用css来替代

等宽
code 表示源代码，将code放在pre中结合起来表示源码
kbd  表示文本是键盘上字符样式
tt

pre
在pre标签中的字符实体，敲入的空格，换行，制表符都会解释后显示在页面中，尤其经常用code和pre搭配表示源代码（但要注意字符实体的使用），
<h><adderss><p>不建议放入pre，因为会将pre打断，还有就是对制表符的使用要注意，制表符可能被浏览器解释为4或8个空格，所以尽量不要用

框架，窗口的拆分
将一个窗口拆分成若干个，每个拆分后的窗口同原先窗口的功能上一致，分别装入文档，这样可以实现一个页面浏览多文档
千万要注意的是，body与frameset不可以一起使用，对于那些不支持frameset的浏览器而言，可以通过在frameset中嵌入<noframes><body></body></noframes>来行使一个替代的页面
frameset  cols rows
cols:  piexl  |  50%  |  * 表示剩余的全部
frame  src="文档"  name=""  noresize="noresize"
src允许直接打开文档的锚点src="link.html#here";
这里的name属性与window的name属性相似，用于识别frame
noresize可以使得框架大小固定
行列混合拆分
<frameset cols="55%,45%">
<frame src=""/>
<frameset rows="50%,50%"/>
<frame src=""/>
<frame src=""/>
</frameset>
</frameset>
页面框架的导航
一个框架中写<a href="document.html" target="another-frame-name">
这样就可以将链接的文档在另一个框架中打开
内联框架
可以同body一起使用
<iframe src=""></iframe>

标签font  center basefont将被移除，不建议使用，其实一切在标签中用于控制样式的属性以及专门用来控制样式的东西都不建议继续使用，我们要做的是将表现与文档的结果剥离

头部head
title最常见
<base target="_blank"/>用于指定由该页面打开的文档在什么窗口显示
link
script
meta 用于描述页面数据的信息，所以对于搜索引擎索引到页面很重要
<meta name="keywords" content="HTML,ASP,PHP,SQL">

script标签不被支持
javascript
<script>
<!--
code...
//-->
</script>
vbscript
<script>
<!--
code...
'-->
</script>
script代码不被支持
虽然script标签被识别了，可是代码没有被执行
在</script>标签后面添加标签<noscript>text  for users , script not support</noscript>

object 嵌入多媒体对象
applet 嵌入java程序
param 包含在上面的两个标签中，为run-time提供参数

html4.0以及xhtml规定的元素通用属性
通用的意思是绝大部分元素都可以使用
class  id  style title鼠标悬停时显示提示内容
dir 设置文本的显示方向
lang=”“
xml：lang=”“ 这两个都用来设置内容的语言，后者是xhtml提出的
accesskey 设置元素的加速键
tabindex 设置tab键对元素的访问次序

url编码
internet传送url是只能是ascii字符集的字符，所以要对那些非ascii字符编码，将其转换成%hh的格式

结构化和可视化
不要用结构化元素模拟表现效果的方式来胡乱地写作 HTML，根据元素的语义来使用它们，而不是根据它们看上去的样子，展示文档结构和可视表达是两个完全不同的事物，并且结构化元素应被用来转换文本，而不是强加显示效果，CSS不对元素被期望的外观做任何假定。它等待你来告诉它你所期待的元素外观，即便是你看到的一些结构化元素貌似具有特定的显示样式，其实这些都可以通过css来改变。

XHTML DTD
strict
<!DOCTYPE html
PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
transfaction
<!DOCTYPE html
PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
frameset
<!DOCTYPE html
PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
必须写在html文档最开始，上面的三种dtd对html文档的xml严格性不同

页面的布局
简单的布局：table td 就可以实现，不过要注意宽高属性的细心设置
css布局页面：前提是很好的利用div li等结构化标签和id class结构化文档，这样布局的网站不仅加载快，而且完全实现样式的分离，关于结构化文档请参看
w3school参考手册中的：XHTML 结构化之二

关于网站设计
1，不要试图猜测你的用户会看到你认为十分重要的内容，如果你希望他能够看到那你需要给他足够提示
2，用户讨厌成片成片的文本
3，构建导航，引导你的用户按你想要的流程浏览你的内容，但是不要因此而胡乱添加超链接。
4，要注意的是，你在本地测试过的网站不能代表用户可以以这样的速度来浏览网页
5，为用户留言提供途径
6，分辨率，当设计网页布局时有一种明智的方法是，把页面的某个部分设计为可变的尺寸，这样就可以适应更大或更小的分辨率显示器。
7，浏览器差异你要解决
8，如果你打算在网页中添加多媒体或者怪癖的东西，那先要问问自己，用户安装支持这个东西的插件了吗？
9，残障人士，提供某些基于文本的选择来替代图象和其他图形元素，提供网页字体可选变换
10，<DOCTYPE>、<title> 以及 <h1>正确使用
11，请勿使用 font 标签，请勿使用固定的字体尺寸，请勿使用很小的默认字体尺寸，始终使用一致的背景颜色
12，注意背景色跟text色的搭配，某些搭配 - 比如黑色和红色，黑色和蓝色，黄色和绿色 - 都会使人产生视觉疲劳
13，注意字符之间的间距，行距
14，不要使用奇怪的字体，少用斜体
15，WAI指导原则，为残障人士提供易用性，使用可调节的字体尺寸，使用 "alt" 属性

语义网
按计算机可以理解的方式来描述数据：语义网描述的是事物之间的关系（比方说 A 是 B 的一部分，而 Y 是 Z 的成员）以及事物的属性（例如尺寸、重量、使用期限和价格等等）。
语义网的实现文件形式
RDF(资源描述框架，Resource Description Framework)是一种用于描述网络上的信息和资源的的标记语言。将信息至于 RDF 文件之中，这样的话，这些信息就有可能被计算机程序（"web spiders"）从网络中搜索、发现、摄取、筛选、分析和处理。
RDF 被设计的目的不是为了向人们显示出来 ，RDF 使用 XML 编写 
语义网语言
rdf组成：要描述的资源uri，属性名，属性值
例子：
<?xml version="1.0"?>
<RDF>
  <Description about="http://www.w3school.com.cn/RDF">
    <author>David</author>
    <homepage>http://www.w3school.com.cn</homepage>
  </Description>
</RDF>
资源、属性和属性值的组合可形成一个陈述
The author of http://www.w3school.com.cn/rdf is David
xmlns:rdf 命名空间，规定了带有前缀 rdf 的元素来自命名空间 "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
rdf规定的框架
<rdf:RDF
xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
<rdf:Description  rdf:about="uri">//描述条目1
<attribute0>value0</attribute0>//属性值
<attribute1>value1</attribute1>
</rdf:Description>
<rdf:Description rdf:about="uri">//描述条目2
<attribute0>value0</attribute0>
<attribute1 rdf:resouce="uri"></attribute1>//属性中嵌套描述资源
</rdf:Description>
....
</rdf:RDF>
rdf中的组
 <rdf:Bag>无序组
 <rdf:Bag>
     <rdf:li>John</rdf:li>
     <rdf:li>Paul</rdf:li>
     <rdf:li>George</rdf:li>
     <rdf:li>Ringo</rdf:li>
</rdf:Bag>
<rdf:Seq>有序组
 <rdf:Seq>
     <rdf:li>George</rdf:li>
     <rdf:li>John</rdf:li>
     <rdf:li>Paul</rdf:li>
     <rdf:li>Ringo</rdf:li>
   </rdf:Seq>
  <rdf:Alt>项目可替换组
   <rdf:Alt>
     <rdf:li>CD</rdf:li>
     <rdf:li>Record</rdf:li>
     <rdf:li>Tape</rdf:li>
   </rdf:Alt>
组只是从逻辑上讲数据当成一个整体，并没有限制值的全域，要限制值的全域，通过属性rdf:parseType="Collection"
RDF Schema (RDFS) 是对 RDF 的一种扩展，详见手册
RDF都柏林核心属性，详见手册
OWL 与 RDF 有很多相似之处，但是较之 RDF， OWL 是一门具有更强机器解释能力的更强大的语言。与 RDF 相比，OWL 拥有更大的词汇表以及更强大的语言。
RSS 是一种用于构建语义网应用的快速发展的语言
RSS 被设计用来展示选定的数据，RSS 对那些频繁更新内容的网站是很有帮助的，例如新闻站点，新产品上线等
rss范例
<?xml version="1.0" encoding="ISO-8859-1" ?>
<rss version="2.0">

<channel>
  <title>W3School Home Page</title>
  <link>http://www.w3school.com.cn</link>
  <description>Free web building tutorials</description>
  <item>
    <title>RSS Tutorial</title>
    <link>http://www.w3school.com.cn/rss</link>
    <description>New RSS tutorial on W3School</description>
  </item>
</channel>

</rss>
其中<rss><channel><title><link><description><item>不能标签是规定的，<item>表示条目，可以为多个，但是必须为<channel>的子元素，<title>属性名<link>资源<description>属性值，此外<channel>还有一些可选的子元素，<lang>关于资源语言<copyright>关于资源的版权信息
<category>关于资源的类别，还有别的子元素，参见手册
item也有可选的其他子元素，参见手册
rss使用来展示文档给计算机的，所以你在下好了rss后保存为xml文件，将其放在网站根目录下，然后rss聚合服务注册，搜索引擎注册，总之好像很麻烦，以后用到再看

html5
video
目前的视频由flash支持
<video src="" width="" height=""  controls="controls"></video>
<video width="" height="">
<source src="" type="video/"/>
<source src="" type="video/" />
not support
</video>
source依次查找可用资源，利用第一个可用资源
type=video/ogg  video/mp4
not support用于对那些不支持video的浏览器显示字符串
video 别的属性：autoplay  preload  loop
自动播放   预先加载  循环播放

audio
目前的音频由flash支持
<audio controls="controls">
  <source src="song.ogg" type="audio/ogg">
  <source src="song.mp3" type="audio/mpeg">
Your browser does not support the audio tag.
</audio>
type=audio/mp3  audio/wav audio/ogg
other attributes: preload autoplay

canvas
画布标签，利用javascript可以实现对每一像素的控制，可以绘制丰富的图形，你可以像桌面应用一样的操纵页面的外观。


css
css的书写格式
selector {property: value}
value为若干值，值的关系是联合时，用空格间隔，最好用引号包括起来，关系是独立取代时，用逗号间隔
value注意，不要在属性值与单位之间留有空格。假如你使用 “margin-left: 20 px” 而不是 “margin-left: 20px” ，它仅在 IE 6 中有效，但是在 Mozilla/Firefox 或 Netscape 中却无法正常工作。
property:value若干条之间用;间隔
selector可以是多个，用逗号间隔，这样之后声明的样式表属性被它们共享
selector可以使id class tag
* {
  margin: 0;
  padding: 0;
}
通用选择器
是class时类名的第一个字符不能使用数字！它无法在 Mozilla 或 Firefox 中起作用。
color的几个格式
color:#ffffff  <=>color:#fff <=>color:rgb(255,255,255)
color:rgb(100%,100%,0%) <=> color:rgb(255,255,0)

关于继承的历史遗留问题
有的浏览器并不能够很好的支持css的继承规则，所以你可以这样写
body  {
     font-family: Verdana, sans-serif;
}
p, td, ul, ol, li, dl, dt, dd  {
     font-family: Verdana, sans-serif;
}看起来重复累赘了一些

后代 ul li{}一个空格表示
直接子ul>li{}一个>表示

背景
background:综合设置
background-color:
background-img:url();
背景色和图片可以被任何元素设置
background-repeat:repeat | no-repeat | repeat-x | repeat-y
background-position:
关键字top bottom center left right 一般给出关于水平垂直两个关键字,如果只给出一个关键字，另一个则是center
百分比图片左上角与元素左上角内边对齐时 0% 0% 图片右下角与元素右下角对齐时 100% 100%，图片居中50% 50% ，如果只给出一个百分比，则将其当成水平值，垂直为50%
像素 apx bpx 从元素左上角开始偏移a b像素
background-attachment:fixed | scroll
可以通过padding来扩充背景

段落缩进
text-indent 段落首行缩进，设为负值可以实现首行探出来的效果，当然这样的话必须先将段落整体缩进去
margin-left 段落整体缩进

首字母大写
诀窍时给段落的首字母添加标签span后通过字体样式设置它，不过我觉得这未免有点拙略吧，可能有更好的方法吧

标题与段落之间的距离
通过修正margin:0;  padding:0;来使得间距为零，同理也可指定任何你想要的间距。

css的层叠
如果你想对一个元素设置多个同一css属性的效果，比如text-decoration，你想要设置上划线和下划线，你应该这样写text-decoration:underline overline; 而不是text-decoration:underline;  text-decoration:overline;这样就会将前面的覆盖了，有时候这个诀窍也解决不了问题，比如你想要在页面的某个地方添加两张背景图片，显然background-image会被后一个覆盖掉，解决方案是将要添加的元素用另一个元素嵌套起来，这样就可以将不同图片加载到不同元素，可以它们的位置你可以调节在页面的一处。

分栏显示
策略1 通过table的td实现
策略2 通过float来使现实

文字图片浮动
图片设置:float:left;使得图片左对齐，跟在后面的文字左对齐与图片
文字设置:clear:right;表示不满行的内容在右边留空白

溢出
overflow:scroll | visible | hidden | auto
scroll溢出则会根据需要生成水平垂直滚动条，好像auto也差不多
visible会将现在的width height改变显示全文
hidden溢出部分被丢弃

一本推荐的参考手册：elizabeth castro 写的html xhtml css 基础教程 人民邮电出版






